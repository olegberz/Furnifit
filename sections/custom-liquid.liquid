{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: calc({{ section.settings.padding_top }}px * 0.75);
    padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="grid">
  <div class="grid-sizer"></div> 

  <div class="grid-item">
    <div class="media-container">
      <video class="custom-video" preload="auto" muted loop playsinline>
        <source src="https://res.cloudinary.com/dkscd8svu/video/upload/v1743682048/furnifit_edited_1_xjulyy.mp4" type="video/mp4">
      </video>
      <button class="play-button" onclick="playVideo(this)">Play</button>
    </div>
  </div>

  <div class="grid-item">
    <div class="media-container">
      <video class="custom-video" preload="auto" muted loop playsinline>
        <source src="https://res.cloudinary.com/dkscd8svu/video/upload/v1743691197/3770034-hd_1920_1080_25fps_v2pbva.mp4" type="video/mp4">
      </video>
      <button class="play-button" onclick="playVideo(this)">Play</button>
    </div>
  </div>

  <div class="grid-item">
    <div class="media-container">
      <video class="custom-video" preload="auto" muted loop playsinline>
        <source src="https://res.cloudinary.com/dkscd8svu/video/upload/v1743691321/4231455-hd_1920_1080_25fps_qml2wc.mp4" type="video/mp4">
      </video>
      <button class="play-button" onclick="playVideo(this)">Play</button>
    </div>
  </div>
</div>

<style>
  .grid {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .grid-item {
    width: 30%;
  }

  .media-container {
    position: relative;
    width: 100%;
    aspect-ratio: 9 / 16; /* Задаёт фиксированное соотношение сторон */
    overflow: hidden;
    border-radius: 10px;
  }

  .custom-video {
    width: 100%;
    border-radius: 10px;
    object-fit: cover;
    display: block;
    opacity: 0.8;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    font-size: 24px;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    display: block;
    cursor: pointer;
    z-index: 2;
  }

  .play-button:focus {
    outline: none;
  }
</style>

<script>
  function playVideo(button) {
    const video = button.parentElement.querySelector('video');
    video.play();
    button.style.display = 'none'; // Скрыть кнопку после нажатия
  }

  document.querySelectorAll('.custom-video').forEach(video => {
    // Останавливаем видео и показываем кнопку, если оно не играет
    video.addEventListener('pause', function() {
      const button = video.parentElement.querySelector('.play-button');
      button.style.display = 'block'; // Показать кнопку, если видео на паузе
    });

    // Если курсор на видео — играем его
    video.addEventListener('mouseenter', function() {
      const button = video.parentElement.querySelector('.play-button');
      video.play();
      button.style.display = 'none'; // Скрыть кнопку при начале воспроизведения
    });

    // Когда курсор уходит — видео останавливается и кнопка появляется
    video.addEventListener('mouseleave', function() {
      video.pause();
      video.currentTime = 0; // Сбросить к началу видео
      const button = video.parentElement.querySelector('.play-button');
      button.style.display = 'block'; // Показать кнопку при остановке
    });

    // Для случая, если видео завершилось — вернуть кнопку
    video.addEventListener('ended', function() {
      const button = video.parentElement.querySelector('.play-button');
      button.style.display = 'block'; // Показать кнопку после окончания видео
    });
  });
</script>


{% schema %}
{
  "name": "t:sections.custom-liquid.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "liquid",
      "id": "custom_liquid",
      "label": "t:sections.custom-liquid.settings.custom_liquid.label",
      "info": "t:sections.custom-liquid.settings.custom_liquid.info"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "presets": [
    {
      "name": "t:sections.custom-liquid.presets.name"
    }
  ]
}
{% endschema %}
